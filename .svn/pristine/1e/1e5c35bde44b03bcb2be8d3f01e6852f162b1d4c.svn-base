//移动状态
class MoveState extends StateBase
{
	//当前移动时间
	protected currMoveTime:number;

	//每格移动时间
	protected moveTimePerCell:number;

	//目标位置
	protected toPostion:egret.Point;

	//回调函数
	protected callFunc:()=>void;

	//播放状态
	protected playState:FSMState;

	//状态
	public get state():FSMState { return FSMState.Move; }

	//进入状态 [0]:移动位置 [1]:移动时间 [2]:以什么状态移动 [3]:回调函数 [4]:this
	public OnEnter(args:any[]):void
	{
		this.toPostion = args[0] as egret.Point;
		var totalMoveTime = args[1] as number;
		this.playState = args[2] as FSMState || this.state;
		this.callFunc = args[3] as ()=>void || null;
		

		if (!!this.callFunc)
			this.callFunc.bind(args[4]);

		var selfComp = this.owner.getComponent<BlackboardComponent>(ComponentType.Blackboard);
		var selfPos = selfComp.getPosition();

		var cellCount = Utility.distanceCellByPt(selfPos, this.toPostion);
		this.moveTimePerCell = totalMoveTime / cellCount;
		this.currMoveTime = this.moveTimePerCell;

		var targetPos = this.toPostion;
		if (cellCount > 1)
		{
			var findPathComp = this.owner.getComponent<FindPathComponent>(ComponentType.FindPath);
			targetPos = findPathComp.getNextMoveCell(this.toPostion, selfPos, 0);
		}

		this.owner.trigger(RoleEventDefine.PlayAnimation, this.playState, Utility.lookAt(selfPos.x, selfPos.y, targetPos.x, targetPos.y));
		ModuleEventMgr.instance.triger(new RoleMoveEvent(this.owner, selfPos, targetPos, this.moveTimePerCell));
	}

	//执行状态
	public OnExcuter(deltaTime:number):void
	{
		this.currMoveTime -= deltaTime;

		if (this.currMoveTime <= 0)
		{
			var selfComp = this.owner.getComponent<BlackboardComponent>(ComponentType.Blackboard);
			var selfPos = selfComp.getPosition();
			
			//没有到目标位置
			if (selfPos.x != this.toPostion.x && selfPos.y != this.toPostion.y)
			{
				var findComp = this.owner.getComponent<FindPathComponent>(ComponentType.FindPath);
				var targetPos = findComp.getNextMoveCell(this.toPostion, selfPos, 0);
				ModuleEventMgr.instance.triger(new RoleMoveEvent(this.owner, selfPos, targetPos, this.moveTimePerCell));
				
				this.currMoveTime = this.moveTimePerCell;
				this.owner.trigger(RoleEventDefine.PlayAnimation, this.playState, Utility.lookAt(selfPos.x, selfPos.y, targetPos.x, targetPos.y));
				return;
			}

			//移动到目标位置了
			if (!!this.callFunc)
			{
				this.callFunc();
				return;
			}

			this.owner.trigger(RoleEventDefine.ChangeState, FSMState.Idle);
		}
	}

	//离开状态
	public OnLeave():void {}
}